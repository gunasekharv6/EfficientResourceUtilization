/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.donarsWorkArea;

import businesslogic.CityName;
import businesslogic.CityNetwork;
import userinterface.systemAdminsWorkArea.*;
import businesslogic.EcoSystem;
import businesslogic.FoodBank;
import businesslogic.User;
import businesslogic.cleaner.Cleaner;
import businesslogic.delivery.DeliveryVolunteer;
import businesslogic.donor.Donation;
import businesslogic.donor.Donor;
import businesslogic.enums.Category;
import businesslogic.enums.DonationStatus;
import businesslogic.enums.PickUp;
import businesslogic.enums.UsageStatus;
import businesslogic.enums.UserRole;
import businesslogic.helper.Constants;
import businesslogic.helper.EmailHelper;
import businesslogic.helper.PhoneNoHelper;
import businesslogic.helper.UserNameHelper;
import businesslogic.helper.ValidateInputs;
import businesslogic.organization.OrgManager;
import businesslogic.organization.Organization;
import businesslogic.sysAdmin.SysAdmin;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.nio.file.Paths;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author manojreddy
 */
public class CreateNewDonationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateSysAdminJPanel
     */
    
    private JPanel userProcessJpanel;
    private EcoSystem ecoSystem;
    private User userLogged;
    private Donor donor;
    private String imagePath = Constants.DEFAULT_PROFILE_IMAGE_PATH;
    
    
    /**
     * Creates new form MakeNewDonationJPanel
     */
    public CreateNewDonationJPanel(JPanel userProcessJpanel, EcoSystem ecoSystem, User userLogged) {
        initComponents();
        this.userProcessJpanel = userProcessJpanel;
        this.ecoSystem = ecoSystem;
        this.userLogged = userLogged;
        this.donor = (Donor) userLogged;
        
        populateCategories();
        populateCities();
        populatePickUpMode();
        populateUsageStatus();
        setDefaultPhoto();
    }
    
    private void setDefaultPhoto() {
        
        setPhoto(getClass().getResource(Constants.DEFAULT_PROFILE_IMAGE_PATH).getPath());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usageStatusjComboBox = new javax.swing.JComboBox<>();
        lblpickupmode = new javax.swing.JLabel();
        pickupmodejComboBox = new javax.swing.JComboBox<>();
        lblselectfoodbank = new javax.swing.JLabel();
        selectfoodbankjComboBox = new javax.swing.JComboBox<>();
        txtpickupaddress = new javax.swing.JTextField();
        lblpickupaddress = new javax.swing.JLabel();
        lbldateOfExpiry = new javax.swing.JLabel();
        lblinformation = new javax.swing.JLabel();
        headerjLabel = new javax.swing.JLabel();
        txtinformation = new javax.swing.JTextField();
        lblcity = new javax.swing.JLabel();
        donationcategoryjComboBox = new javax.swing.JComboBox<>();
        btncreatedonationrequest = new javax.swing.JButton();
        lbldonationCategory = new javax.swing.JLabel();
        lblpicHolder = new javax.swing.JLabel();
        lblusagestatus = new javax.swing.JLabel();
        uploadjButton = new javax.swing.JButton();
        cityjComboBox = new javax.swing.JComboBox<>();
        dateofexpiryDATECHOOSER = new com.toedter.calendar.JDateChooser();
        backjButton2 = new javax.swing.JButton();

        setLayout(null);

        usageStatusjComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                usageStatusjComboBoxMousePressed(evt);
            }
        });
        add(usageStatusjComboBox);
        usageStatusjComboBox.setBounds(148, 158, 179, 33);

        lblpickupmode.setText("PickUp Mode:");
        add(lblpickupmode);
        lblpickupmode.setBounds(640, 160, 92, 33);

        pickupmodejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickupmodejComboBoxActionPerformed(evt);
            }
        });
        add(pickupmodejComboBox);
        pickupmodejComboBox.setBounds(760, 160, 179, 33);

        lblselectfoodbank.setText("Select Bank:");
        add(lblselectfoodbank);
        lblselectfoodbank.setBounds(640, 210, 71, 33);

        selectfoodbankjComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                selectfoodbankjComboBoxMousePressed(evt);
            }
        });
        add(selectfoodbankjComboBox);
        selectfoodbankjComboBox.setBounds(760, 210, 179, 33);
        add(txtpickupaddress);
        txtpickupaddress.setBounds(760, 260, 179, 33);

        lblpickupaddress.setText("PickUp Address:");
        add(lblpickupaddress);
        lblpickupaddress.setBounds(640, 260, 93, 33);

        lbldateOfExpiry.setText("Date of Expiry:");
        add(lbldateOfExpiry);
        lbldateOfExpiry.setBounds(12, 260, 99, 33);

        lblinformation.setText("Information:");
        add(lblinformation);
        lblinformation.setBounds(12, 209, 99, 33);

        headerjLabel.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        headerjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerjLabel.setText("Make New Donation");
        add(headerjLabel);
        headerjLabel.setBounds(332, 20, 310, 34);
        add(txtinformation);
        txtinformation.setBounds(148, 209, 179, 33);

        lblcity.setText("City:");
        add(lblcity);
        lblcity.setBounds(640, 110, 93, 33);

        donationcategoryjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donationcategoryjComboBoxActionPerformed(evt);
            }
        });
        add(donationcategoryjComboBox);
        donationcategoryjComboBox.setBounds(148, 106, 179, 33);

        btncreatedonationrequest.setText("Create Donation Request");
        btncreatedonationrequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreatedonationrequestActionPerformed(evt);
            }
        });
        add(btncreatedonationrequest);
        btncreatedonationrequest.setBounds(410, 369, 180, 33);

        lbldonationCategory.setText("Donation Category:");
        add(lbldonationCategory);
        lbldonationCategory.setBounds(12, 109, 118, 33);

        lblpicHolder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(lblpicHolder);
        lblpicHolder.setBounds(427, 103, 126, 139);

        lblusagestatus.setText("Usage Status:");
        add(lblusagestatus);
        lblusagestatus.setBounds(12, 158, 99, 33);

        uploadjButton.setText("upload");
        uploadjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadjButtonActionPerformed(evt);
            }
        });
        add(uploadjButton);
        uploadjButton.setBounds(449, 268, 71, 25);

        cityjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityjComboBoxActionPerformed(evt);
            }
        });
        add(cityjComboBox);
        cityjComboBox.setBounds(760, 110, 179, 33);
        add(dateofexpiryDATECHOOSER);
        dateofexpiryDATECHOOSER.setBounds(148, 260, 179, 33);

        backjButton2.setText("< < Back");
        backjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton2ActionPerformed(evt);
            }
        });
        add(backjButton2);
        backjButton2.setBounds(12, 27, 85, 25);
    }// </editor-fold>//GEN-END:initComponents

    private void usageStatusjComboBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usageStatusjComboBoxMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_usageStatusjComboBoxMousePressed

    private void selectfoodbankjComboBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectfoodbankjComboBoxMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectfoodbankjComboBoxMousePressed

    public void populateCategories() {
        
        donationcategoryjComboBox.removeAllItems();
        String[] categories = Category.getCategoriesArray();
        for(String category:categories) {
            donationcategoryjComboBox.addItem(category);
        }
    }
    
    public void populateUsageStatus() {
        
        usageStatusjComboBox.removeAllItems();
        String[] usageStatus = UsageStatus.getUsageStatusArray();
        for(String status:usageStatus) {
            usageStatusjComboBox.addItem(status);
        }
    }
    
    public void populatePickUpMode() {
        
        pickupmodejComboBox.removeAllItems();
        String[] modes = PickUp.getPickUpArray();
        for(String mode:modes) {
            pickupmodejComboBox.addItem(mode);
        }
        
        String selectedItem = (String) pickupmodejComboBox.getSelectedItem();
        if(selectedItem.equalsIgnoreCase("Home")) {
            selectfoodbankjComboBox.setEnabled(false);
        }else{
            selectfoodbankjComboBox.setEnabled(true);
        }
    }
    
    public void populateCities() {
        
        List<CityNetwork> cityNetworks = ecoSystem.getCityNetworkDirectory().getCityNetworks();
        cityjComboBox.removeAllItems();
        for(CityNetwork cityNetwork:ecoSystem.getCityNetworkDirectory().getCityNetworks()) {
            cityjComboBox.addItem(cityNetwork.getCityName().name());
        }
        
    }
    
    public void populateFoodBanks() {
        selectfoodbankjComboBox.removeAllItems();
        for(CityNetwork cityNetwork:ecoSystem.getCityNetworkDirectory().getCityNetworks()) {
            if (cityNetwork.getCityName().name().equals(cityjComboBox.getSelectedItem().toString())){
                if (cityNetwork.getFoodBankDirectory()!=null){
                    for(FoodBank fb : cityNetwork.getFoodBankDirectory().getFoodBanks()){
                       selectfoodbankjComboBox.addItem(fb.getName());
                    }
                }
            }            
        }
    }
    
//    
//    public void populateFoodBanks() {
//        selectfoodbankjComboBox.removeAllItems();
//        
//        for(CityNetwork cityNetwork:ecoSystem.getCityNetworkDirectory().getCityNetworks()) {
//            if (cityNetwork.getCityName().name().equals(cityjComboBox.getSelectedItem().toString())){
//                if (cityNetwork.getFoodBankDirectory()!=null){
//                    for(FoodBank fb : cityNetwork.getFoodBankDirectory().getFoodBanks()){
//                       selectfoodbankjComboBox.addItem(fb.getName());
//                    }
//                }
//            }            
//        }
//    }
    
    
    private void btncreatedonationrequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreatedonationrequestActionPerformed
        if (txtinformation.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "!Error! Please enter some information about the Donation");
            return;
        }
        String information = txtinformation.getText();
        Category category = Category.valueOf(donationcategoryjComboBox.getSelectedItem().toString());
        UsageStatus usageStatus = UsageStatus.valueOf(usageStatusjComboBox.getSelectedItem().toString());
        PickUp pickUp = PickUp.valueOf(pickupmodejComboBox.getSelectedItem().toString());
        
        int cityNetworkIndex = cityjComboBox.getSelectedIndex();
        if (cityNetworkIndex<0){
            JOptionPane.showMessageDialog(this, "!Error! No City present in the system");
            return;
        }
        CityNetwork cityNetwork =  ecoSystem.getCityNetworkDirectory().getCityNetworks().get(cityNetworkIndex);
        
        int foodBankIndex=-1;
        FoodBank foodBank = null;
        if (!pickupmodejComboBox.getSelectedItem().equals("Home")){
            foodBankIndex = selectfoodbankjComboBox.getSelectedIndex();
            if(foodBankIndex <0) {
                JOptionPane.showMessageDialog(this, "!Error! No food banks present. Please select different options.");
                return;
            }
            foodBank = cityNetwork.getFoodBankDirectory().getFoodBanks().get(foodBankIndex);
        }
            
        
        String addressToPickUp = null;
        if ((PickUp.valueOf(pickupmodejComboBox.getSelectedItem().toString())).equals(PickUp.Home)){
            if (!ValidateInputs.isAddressValid(txtpickupaddress.getText())){
                JOptionPane.showMessageDialog(this, "!Error! Address invalid for Home Pickup");
                return;
            }else{
                addressToPickUp = txtpickupaddress.getText();
            }
        }else{
            if (foodBank!=null){
                addressToPickUp = foodBank.getLocation();
            }
        }
        Date dateofExpiry = null;
        if(donationcategoryjComboBox.getSelectedItem().toString().equals("Food") || donationcategoryjComboBox.getSelectedItem().toString().equals("Medicines")){
            dateofExpiry = (Date) dateofexpiryDATECHOOSER.getDate();
        }else{
            dateofexpiryDATECHOOSER.removeAll();
            dateofexpiryDATECHOOSER.setEnabled(false);
        }
        
        DonationStatus ds = DonationStatus.ReadyToPickup;
        
        if (dateofExpiry != null){
            if (dateofExpiry.before(new Date())){
                ds = DonationStatus.Expired;
            }
        }
        
        Donation newDonation = new Donation(information, category, usageStatus, pickUp, foodBank, addressToPickUp, dateofExpiry, imagePath, donor, cityNetwork, null, null, null, ds, null, new Date(), new Date(), donor.getName(), donor.getName());
        JOptionPane.showMessageDialog(this, "Sucessfully added a Donation request.");
        
        txtinformation.setText("");
        txtpickupaddress.setText("");
        dateofexpiryDATECHOOSER.setDate(null);

    }//GEN-LAST:event_btncreatedonationrequestActionPerformed

    private void uploadjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadjButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("/"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Jpeg format", "jpeg"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Jpg format", "jpg"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Png format", "png"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            imagePath = selectedFile.getAbsolutePath();
            setPhoto(imagePath);
        }
    }//GEN-LAST:event_uploadjButtonActionPerformed

    private void setPhoto(String imagePath) {
        ImageIcon photo = new ImageIcon(imagePath);
        Image photoResized = photo.getImage().getScaledInstance(lblpicHolder.getWidth(), lblpicHolder.getHeight(),4);        
        lblpicHolder.setIcon(new ImageIcon(photoResized));
    }
    
    private void pickupmodejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickupmodejComboBoxActionPerformed
        if (((String) pickupmodejComboBox.getSelectedItem()).equals("FoodBank")){
            selectfoodbankjComboBox.setEnabled(true);
            txtpickupaddress.setText("");
            txtpickupaddress.setEnabled(false);
            
            populateFoodBanks();
        }else{
            selectfoodbankjComboBox.removeAllItems();
            
            selectfoodbankjComboBox.setEnabled(false);
            txtpickupaddress.setEnabled(true);
        }
    }//GEN-LAST:event_pickupmodejComboBoxActionPerformed

    private void backjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton2ActionPerformed
        // TODO add your handling code here:
        userProcessJpanel.remove(this);

        Component[] components = userProcessJpanel.getComponents();
        ManageMyDonationsJPanel manageMyDonationsJPanel = (ManageMyDonationsJPanel) components[components.length-1];
        manageMyDonationsJPanel.populateDonationHistoryTable();

        CardLayout cardLayout = (CardLayout) userProcessJpanel.getLayout();
        cardLayout.previous(userProcessJpanel);
    }//GEN-LAST:event_backjButton2ActionPerformed

    private void cityjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityjComboBoxActionPerformed
        populateFoodBanks();
    }//GEN-LAST:event_cityjComboBoxActionPerformed

    private void donationcategoryjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donationcategoryjComboBoxActionPerformed
        if(donationcategoryjComboBox.getSelectedItem().toString().equals("Food") || donationcategoryjComboBox.getSelectedItem().toString().equals("Medicines")){
            dateofexpiryDATECHOOSER.setEnabled(true);
        }else{
            dateofexpiryDATECHOOSER.setEnabled(false);
        }
    }//GEN-LAST:event_donationcategoryjComboBoxActionPerformed


    
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton2;
    private javax.swing.JButton btncreatedonationrequest;
    private javax.swing.JComboBox<String> cityjComboBox;
    private com.toedter.calendar.JDateChooser dateofexpiryDATECHOOSER;
    private javax.swing.JComboBox<String> donationcategoryjComboBox;
    private javax.swing.JLabel headerjLabel;
    private javax.swing.JLabel lblcity;
    private javax.swing.JLabel lbldateOfExpiry;
    private javax.swing.JLabel lbldonationCategory;
    private javax.swing.JLabel lblinformation;
    private javax.swing.JLabel lblpicHolder;
    private javax.swing.JLabel lblpickupaddress;
    private javax.swing.JLabel lblpickupmode;
    private javax.swing.JLabel lblselectfoodbank;
    private javax.swing.JLabel lblusagestatus;
    private javax.swing.JComboBox<String> pickupmodejComboBox;
    private javax.swing.JComboBox<String> selectfoodbankjComboBox;
    private javax.swing.JTextField txtinformation;
    private javax.swing.JTextField txtpickupaddress;
    private javax.swing.JButton uploadjButton;
    private javax.swing.JComboBox<String> usageStatusjComboBox;
    // End of variables declaration//GEN-END:variables
}
