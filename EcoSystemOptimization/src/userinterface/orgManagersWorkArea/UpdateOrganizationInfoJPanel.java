/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.orgManagersWorkArea;

import businesslogic.CityNetwork;
import businesslogic.EcoSystem;
import businesslogic.User;
import businesslogic.enums.OrganizationType;
import businesslogic.helper.Constants;
import businesslogic.helper.EmailHelper;
import businesslogic.helper.PhoneNoHelper;
import businesslogic.helper.ValidateInputs;
import businesslogic.organization.Organization;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author manojreddy
 */
public class UpdateOrganizationInfoJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateOrganizationInfoJPanel
     */
    
    private JPanel userProcessJpanel;
    private EcoSystem ecoSystem;
    private CityNetwork cityNetwork;
    private Organization organization;
    private User userLogged;
    private String imagePath;
    private static final Logger logger = Logger.getLogger(UpdateOrganizationInfoJPanel.class.getName());
    
    public UpdateOrganizationInfoJPanel(JPanel userProcessJpanel, EcoSystem ecoSystem, CityNetwork cityNetwork, Organization organization, User userLogged) {
        initComponents();
        this.userProcessJpanel = userProcessJpanel;
        this.ecoSystem = ecoSystem;
        this.cityNetwork = cityNetwork;
        this.organization = organization;
        this.userLogged = userLogged;
        
        picHolderjLabel.setSize(126, 139);
        populateData();
        populateCityHeader();
    }
    
    private void populateCityHeader(){
        lblheadercityName.setText(cityNetwork.getCityName().name());
    }
    private void setDefaultPhoto() {
        setPhoto(getClass().getResource(Constants.DEFAULT_PROFILE_IMAGE_PATH).getPath());
    }

    private void populateData() {
        
        namejTextField.setText(organization.getOrganizationName());
        emailjTextField.setText(organization.getEmail());
        addressjTextField.setText(organization.getAddress());
        phoneNojTextField.setText(organization.getPhoneNo());
        imagePath = organization.getOrganizationImage();
        
        String[] organizationTypes  = OrganizationType.getOrganizationTypesArray();
        organizationTypejComboBox.removeAllItems();
        for(String organizationType: organizationTypes) {
            organizationTypejComboBox.addItem(organizationType);
        }
        
        organizationTypejComboBox.setSelectedItem(organization.getOrganizationType().name());
        
        setPhoto(imagePath);
    }
    
    private void setPhoto(String imagePath) {
        
        if(imagePath.equals(Constants.DEFAULT_ORGANIZATION_IMAGE_PATH)){
            ImageIcon photo = new ImageIcon(getClass().getResource(imagePath).getPath());
            Image photoResized = photo.getImage().getScaledInstance(picHolderjLabel.getWidth(), picHolderjLabel.getHeight(),4);
            picHolderjLabel.setIcon(new ImageIcon(photoResized));
            return;
        }
        ImageIcon photo = new ImageIcon(imagePath);
        Image photoResized = photo.getImage().getScaledInstance(picHolderjLabel.getWidth(), picHolderjLabel.getHeight(),4);
        picHolderjLabel.setIcon(new ImageIcon(photoResized));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        organizationTypejComboBox = new javax.swing.JComboBox<>();
        headerjLabel = new javax.swing.JLabel();
        addressjTextField = new javax.swing.JTextField();
        emailjLabel = new javax.swing.JLabel();
        backjButton = new javax.swing.JButton();
        namejLabel = new javax.swing.JLabel();
        phoneNojTextField = new javax.swing.JTextField();
        uploadjButton = new javax.swing.JButton();
        picHolderjLabel = new javax.swing.JLabel();
        updatejButton = new javax.swing.JButton();
        emailjTextField = new javax.swing.JTextField();
        phoneNojLabel = new javax.swing.JLabel();
        organizationTypejLabel = new javax.swing.JLabel();
        namejTextField = new javax.swing.JTextField();
        addressjLabel = new javax.swing.JLabel();
        lblheadercityTag = new javax.swing.JLabel();
        lblheadercityName = new javax.swing.JLabel();

        setLayout(null);

        organizationTypejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationTypejComboBoxActionPerformed(evt);
            }
        });
        add(organizationTypejComboBox);
        organizationTypejComboBox.setBounds(320, 320, 234, 30);

        headerjLabel.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        headerjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerjLabel.setText("Update Organization");
        add(headerjLabel);
        headerjLabel.setBounds(190, 20, 415, 34);
        add(addressjTextField);
        addressjTextField.setBounds(320, 270, 234, 30);

        emailjLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        emailjLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        emailjLabel.setText("Email :");
        add(emailjLabel);
        emailjLabel.setBounds(161, 176, 125, 18);

        backjButton.setText("< < Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });
        add(backjButton);
        backjButton.setBounds(18, 41, 85, 25);

        namejLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        namejLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        namejLabel.setText("Name :");
        add(namejLabel);
        namejLabel.setBounds(161, 123, 125, 18);
        add(phoneNojTextField);
        phoneNojTextField.setBounds(321, 222, 234, 30);

        uploadjButton.setText("upload");
        uploadjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadjButtonActionPerformed(evt);
            }
        });
        add(uploadjButton);
        uploadjButton.setBounds(680, 310, 71, 25);

        picHolderjLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(picHolderjLabel);
        picHolderjLabel.setBounds(649, 159, 126, 139);

        updatejButton.setText("Update");
        updatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatejButtonActionPerformed(evt);
            }
        });
        add(updatejButton);
        updatejButton.setBounds(350, 380, 73, 25);
        add(emailjTextField);
        emailjTextField.setBounds(321, 174, 234, 30);

        phoneNojLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        phoneNojLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        phoneNojLabel.setText("Phone No :");
        add(phoneNojLabel);
        phoneNojLabel.setBounds(160, 228, 125, 18);

        organizationTypejLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        organizationTypejLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        organizationTypejLabel.setText("Organization Type :");
        add(organizationTypejLabel);
        organizationTypejLabel.setBounds(160, 320, 125, 30);
        add(namejTextField);
        namejTextField.setBounds(321, 123, 234, 30);

        addressjLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        addressjLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressjLabel.setText("Address :");
        add(addressjLabel);
        addressjLabel.setBounds(160, 270, 125, 30);

        lblheadercityTag.setText("City:");
        add(lblheadercityTag);
        lblheadercityTag.setBounds(650, 30, 26, 30);
        add(lblheadercityName);
        lblheadercityName.setBounds(700, 30, 130, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void organizationTypejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationTypejComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_organizationTypejComboBoxActionPerformed

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userProcessJpanel.remove(this);

        Component[] components = userProcessJpanel.getComponents();
        CardLayout cardLayout = (CardLayout) userProcessJpanel.getLayout();
        cardLayout.previous(userProcessJpanel);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void uploadjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadjButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("/"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Jpeg format", "jpeg"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Jpg format", "jpg"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Png format", "png"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            imagePath = selectedFile.getAbsolutePath();
            setPhoto(imagePath);
        }
    }//GEN-LAST:event_uploadjButtonActionPerformed

    private void updatejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatejButtonActionPerformed
        // TODO add your handling code here:
        if(isDataEnteredValid()) {

            if(!organization.getEmail().equals(emailjTextField.getText()) && EmailHelper.isEmailAlreadyExisted(ecoSystem, emailjTextField.getText())) {
                JOptionPane.showMessageDialog(this, "Email already Exists in the Ecosystem.");
                return;
            }

            if(!organization.getPhoneNo().equals(phoneNojTextField.getText()) && PhoneNoHelper.isPhoneNoAlreadyExisted(ecoSystem, phoneNojTextField.getText())) {
                JOptionPane.showMessageDialog(this, "PhoneNo already Exists in the Ecosystem.");
                return;
            }

            organization.setOrganizationName(namejTextField.getText());
            organization.setEmail(emailjTextField.getText());
            organization.setPhoneNo(phoneNojTextField.getText());
            organization.setAddress(addressjTextField.getText());
            organization.setOrganizationImage(imagePath);
            organization.setOrganizationType(OrganizationType.valueOf((String) organizationTypejComboBox.getSelectedItem()));

            JOptionPane.showMessageDialog(this, "Successfully saved Organization");
            logger.log(Level.INFO, "Organization Info updated successfully");
        }else{
            JOptionPane.showMessageDialog(this, "Error saving Organization. Please check DataTypes");
        }
    }//GEN-LAST:event_updatejButtonActionPerformed

    private boolean isDataEnteredValid() {
        if(ValidateInputs.isNameValid(namejTextField.getText()) && 
                ValidateInputs.isEmailValid(emailjTextField.getText()) && ValidateInputs.isPhoneNumberValid(phoneNojTextField.getText())
                && ValidateInputs.isAddressValid(addressjTextField.getText()))  {
         return true; 
    }
        return false;
    } 
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressjLabel;
    private javax.swing.JTextField addressjTextField;
    private javax.swing.JButton backjButton;
    private javax.swing.JLabel emailjLabel;
    private javax.swing.JTextField emailjTextField;
    private javax.swing.JLabel headerjLabel;
    private javax.swing.JLabel lblheadercityName;
    private javax.swing.JLabel lblheadercityTag;
    private javax.swing.JLabel namejLabel;
    private javax.swing.JTextField namejTextField;
    private javax.swing.JComboBox<String> organizationTypejComboBox;
    private javax.swing.JLabel organizationTypejLabel;
    private javax.swing.JLabel phoneNojLabel;
    private javax.swing.JTextField phoneNojTextField;
    private javax.swing.JLabel picHolderjLabel;
    private javax.swing.JButton updatejButton;
    private javax.swing.JButton uploadjButton;
    // End of variables declaration//GEN-END:variables
}
